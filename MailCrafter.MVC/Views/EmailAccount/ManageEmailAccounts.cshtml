@model List<string>

@{
    ViewData["Title"] = "Manage Email Accounts";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="display-5 fw-bold mb-2" style="background: linear-gradient(45deg, #FF6B00, #FFA500); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">Email Accounts</h1>
            <p class="text-muted fs-5">Manage your email accounts for sending campaigns</p>
        </div>
    </div>

    <div class="card border-0 shadow-sm">
        <div class="card-header bg-white py-4">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <i class="fas fa-envelope me-3" style="color: #FF6B00; font-size: 1.5rem;"></i>
                    <h2 class="h4 mb-0 fw-bold" style="color: #FF6B00;">Email Accounts</h2>
                </div>
                <button onclick="switchToAddEmailAccount()" class="btn btn-warning text-white px-4 py-2 fw-bold">
                    <i class="fas fa-plus me-2"></i>Add Email Account
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model == null || !Model.Any())
            {
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="fas fa-envelope" style="font-size: 4rem; color: #FF6B00; opacity: 0.5;"></i>
                    </div>
                    <h3 class="h4 fw-bold mb-3" style="color: #FF6B00;">No Email Accounts Found</h3>
                    <p class="text-muted mb-4 fs-5">Add your first email account to start sending emails.</p>
                    <button onclick="switchToAddEmailAccount()" class="btn btn-warning text-white px-4 py-2 fw-bold">
                        <i class="fas fa-plus-circle me-2"></i>Add Your First Email Account
                    </button>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="bg-light">
                            <tr>
                                <th class="py-3 px-4 fw-bold" style="color: #FF6B00;">Email Address</th>
                                <th class="py-3 px-4 text-end fw-bold" style="color: #FF6B00;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var email in Model)
                            {
                                <tr class="hover-lift">
                                    <td class="py-3 px-4 align-middle">
                                        <i class="fas fa-envelope me-2" style="color: #FF6B00;"></i>
                                        <span class="fw-medium">@email</span>
                                    </td>
                                    <td class="py-3 px-4 text-end">
                                        <button class="btn btn-sm btn-outline-warning me-2 update-password" data-email="@email">
                                            <i class="fas fa-key me-2"></i>Change Password
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger delete-email" data-email="@email">
                                            <i class="fas fa-trash-alt me-2"></i>Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Update Password -->
<div class="modal fade" id="updatePasswordModal" tabindex="-1" aria-labelledby="updatePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title fw-bold" id="updatePasswordModalLabel">
                    <i class="fas fa-key me-2"></i>Update Email Password
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <input type="hidden" id="updateEmail">
                <div class="mb-4">
                    <label class="form-label fw-medium">Email Address</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-envelope" style="color: #FF6B00;"></i>
                        </span>
                        <input type="text" class="form-control border-start-0" id="displayEmail" readonly>
                    </div>
                </div>
                <div class="mb-4">
                    <label class="form-label fw-medium">New Password</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-lock" style="color: #FF6B00;"></i>
                        </span>
                        <input type="password" class="form-control border-start-0" id="newPassword" placeholder="Enter new password">
                        <button class="btn btn-outline-warning border-start-0" type="button" id="togglePassword">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <small class="form-text text-muted mt-2">
                        <i class="fas fa-info-circle me-1"></i>
                        Password must be at least 8 characters long
                    </small>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light px-4" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <button type="button" class="btn btn-warning text-white px-4 fw-bold" id="confirmUpdatePassword">
                    <span id="loadingUpdatePassword" class="spinner-border spinner-border-sm d-none me-2"></span>
                    <i class="fas fa-save me-2"></i>Update Password
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .hover-lift {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .hover-lift:hover {
            transform: translateY(-2px);
            background-color: rgba(255, 107, 0, 0.05);
        }

        .btn-outline-warning {
            color: #FF6B00;
            border-color: #FF6B00;
        }

        .btn-outline-warning:hover {
            background-color: #FF6B00;
            border-color: #FF6B00;
            color: white;
        }

        .table th {
            border-top: none;
        }

        .toast {
            border-radius: 0.5rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        .input-group-text {
            border-color: #dee2e6;
        }

        .input-group .form-control {
            border-color: #dee2e6;
        }

        .input-group .form-control:focus {
            border-color: #FF6B00;
            box-shadow: none;
        }

        .input-group .btn-outline-warning {
            border-color: #dee2e6;
        }

        .input-group .btn-outline-warning:hover {
            border-color: #FF6B00;
        }
    </style>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Toggle password visibility
        $("#togglePassword").click(function() {
            const passwordInput = $("#newPassword");
            const type = passwordInput.attr("type") === "password" ? "text" : "password";
            passwordInput.attr("type", type);
            $(this).find("i").toggleClass("fa-eye fa-eye-slash");
        });

        // Delete email
        $(document).on("click", ".delete-email", function () {
            var email = $(this).data("email");
            if (confirm("Are you sure you want to remove this email account?")) {
                $.ajax({
                    url: `/remove?email=${encodeURIComponent(email)}`,
                    type: "DELETE",
                    success: function (response) {
                        showToast(response.message, "success");
                        location.reload();
                    },
                    error: function (xhr) {
                        var message = xhr.responseJSON?.message || "Failed to remove email.";
                        showToast(message, "danger");
                    }
                });
            }
        });

        // Open update password modal
        $(document).on("click", ".update-password", function () {
            var email = $(this).data("email");
            $("#updateEmail").val(email);
            $("#displayEmail").val(email);
            $("#newPassword").val("");
            $("#updatePasswordModal").modal("show");
        });

        // Update email password
        $("#confirmUpdatePassword").click(function () {
            var email = $("#updateEmail").val();
            var newPassword = $("#newPassword").val();

            if (!newPassword) {
                showToast("Please enter a new password", "warning");
                return;
            }

            if (newPassword.length < 8) {
                showToast("Password must be at least 8 characters long", "warning");
                return;
            }

            $("#loadingUpdatePassword").removeClass("d-none");
            $(this).prop("disabled", true);

            $.ajax({
                url: `/update-password?email=${encodeURIComponent(email)}`,
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(newPassword),
                success: function (response) {
                    showToast(response.message, "success");
                    $("#updatePasswordModal").modal("hide");
                },
                error: function (xhr) {
                    var message = xhr.responseJSON?.message || "Failed to update password.";
                    showToast(message, "danger");
                },
                complete: function () {
                    $("#loadingUpdatePassword").addClass("d-none");
                    $("#confirmUpdatePassword").prop("disabled", false);
                }
            });
        });

        // Show toast notification
        function showToast(message, type) {
            $(".toast").remove();
            var toast = `
                <div class="toast align-items-center text-white bg-${type} border-0 position-fixed top-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="fas ${type === 'success' ? 'fa-check-circle' : type === 'warning' ? 'fa-exclamation-circle' : 'fa-times-circle'} me-2"></i>
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>`;
            $("body").append(toast);
            var toastElement = new bootstrap.Toast($(".toast"));
            toastElement.show();
            setTimeout(() => $(".toast").fadeOut(500, function () { $(this).remove(); }), 3000);
        }
    });
</script>
