@model MailCrafter.Domain.CustomGroupEntity

@{
    ViewData["Title"] = "Add Group";
}

<div class="container py-5">
    <div class="card shadow-sm">
        <div class="card-header bg-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <i class="fas fa-users text-primary me-2"></i>
                    <h2 class="h4 text-primary mb-0">Add New Group</h2>
                </div>
                <a asp-action="ManageGroups" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Groups
                </a>
            </div>
        </div>
        <div class="card-body p-4">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                </div>
            }

            <form id="addGroupForm" method="post" action="@Url.Action("AddGroup", "CustomGroup")">
                <div class="mb-4">
                    <label for="GroupName" class="form-label">
                        <i class="fas fa-tag text-primary me-2"></i>Group Name
                    </label>
                    <input type="text" class="form-control form-control-lg" id="GroupName" name="GroupName" 
                           placeholder="Enter group name" required />
                </div>

                <div class="mb-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <label class="form-label mb-0">
                            <i class="fas fa-list text-primary me-2"></i>Custom Fields
                        </label>
                        <button type="button" class="btn btn-outline-primary" onclick="addCustomField()">
                            <i class="fas fa-plus me-2"></i>Add Field
                        </button>
                    </div>
                    <div id="customFieldsContainer"></div>
                </div>

                <input type="hidden" id="fieldNames" name="fieldNames" />
                <input type="hidden" id="fieldValues" name="fieldValues" />
                <input type="hidden" id="emails" name="emails" />

                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Save Group
                    </button>
                    <a asp-action="ManageGroups" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-2"></i>Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .custom-field-set {
            background-color: #f8f9fa;
            border-radius: 0.375rem;
            transition: all 0.2s ease-in-out;
            margin-bottom: 1rem;
        }

        .custom-field-set:hover {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .form-control:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .btn {
            padding: 0.5rem 1rem;
        }

        .btn i {
            width: 1rem;
            text-align: center;
        }
    </style>
}

@section Scripts {
    <script>
        function addCustomField() {
            const container = document.getElementById('customFieldsContainer');
            const fieldSet = document.createElement('div');
            fieldSet.className = 'custom-field-set p-3';
            fieldSet.innerHTML = `
                <div class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label">Field Name</label>
                        <input type="text" class="form-control field-key" name="fieldNames[]" 
                               placeholder="e.g., Department" required />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Field Value</label>
                        <input type="text" class="form-control field-value" name="fieldValues[]" 
                               placeholder="e.g., IT" required />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control field-email" name="emails[]" 
                               placeholder="e.g., user@example.com" required />
                    </div>
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-danger w-100" onclick="removeField(this)">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            `;
            container.appendChild(fieldSet);
        }

        function removeField(button) {
            button.closest('.custom-field-set').remove();
        }

        document.getElementById('addGroupForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const fieldNames = [];
            const fieldValues = [];
            const emails = [];

            document.querySelectorAll('input[name="fieldNames[]"]').forEach((input) => {
                fieldNames.push(input.value);
            });

            document.querySelectorAll('input[name="fieldValues[]"]').forEach((input) => {
                fieldValues.push(input.value);
            });

            document.querySelectorAll('input[name="emails[]"]').forEach((input) => {
                emails.push(input.value);
            });

            const groupName = document.getElementById('GroupName').value;

            if (!groupName || fieldNames.length === 0 || fieldValues.length === 0 || emails.length === 0) {
                alert('Please fill in the group name and add at least one custom field.');
                return;
            }

            document.getElementById('fieldNames').value = JSON.stringify(fieldNames);
            document.getElementById('fieldValues').value = JSON.stringify(fieldValues);
            document.getElementById('emails').value = JSON.stringify(emails);

            this.submit();
        });

        // Add first field set on page load
        document.addEventListener('DOMContentLoaded', function() {
            addCustomField();
        });
    </script>
}