@model List<string>

@{
    ViewData["Title"] = "User Management";
}

<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="container mt-4">
    <h2 class="text-center mb-4 text-primary"><i class="fas fa-users"></i> User Management</h2>

    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0"><i class="fas fa-list"></i> User List</h4>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="mb-3">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search by username or email...">
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered table-hover text-center">
                        <thead class="table-dark">
                            <tr>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var parts = item.Split('|');
                                var userId = parts[0];
                                var userData = parts[1].Split(" - ");
                                var username = userData[0];
                                var email = userData.Length > 1 ? userData[1] : "";

                                <tr>
                                    <td>@username</td>
                                    <td>@email</td>
                                    <td>
                                        <button class="btn btn-info btn-sm me-2 view-detail"
                                                data-userid="@userId"
                                                data-username="@username"
                                                data-email="@email"
                                                data-bs-toggle="modal" data-bs-target="#detailModal">
                                            Detail
                                        </button>

                                        <button class="btn btn-warning btn-sm me-2 edit-user"
                                                data-userid="@userId"
                                                data-username="@username"
                                                data-email="@email"
                                                data-bs-toggle="modal" data-bs-target="#editModal">
                                            Edit
                                        </button>

                                        <button class="btn btn-danger btn-sm delete-user"
                                                data-userid="@userId"
                                                data-username="@username"
                                                data-bs-toggle="modal" data-bs-target="#deleteModal">
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>


            }
            else
            {
                <p class="text-muted">No users found.</p>
            }
        </div>
    </div>
</div>

<!-- Detail Modal -->
<div class="modal fade" id="detailModal" tabindex="-1" aria-labelledby="detailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content shadow">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="detailModalLabel"><i class="fas fa-info-circle"></i> User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailContent">
                <!-- User details will be shown here -->
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content shadow">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="editModalLabel"><i class="fas fa-edit"></i> Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <div class="mb-3">
                        <label for="editUsername" class="form-label">Username:</label>
                        <input type="text" id="editUsername" name="editUsername" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="editEmail" class="form-label">Email:</label>
                        <input type="email" id="editEmail" name="editEmail" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="editPassword" class="form-label">New Password (Optional):</label>
                        <input type="password" id="editPassword" name="editPassword" class="form-control" />
                    </div>
                    <button type="submit" class="btn btn-success w-100">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel"><i class="fas fa-exclamation-triangle"></i> Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <p class="text-danger"><strong>Are you sure you want to delete this user?</strong></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">



<!-- Bootstrap JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>


<script>
        document.addEventListener('DOMContentLoaded', function () {
        let currentUserId = null;

           document.querySelectorAll('.view-detail').forEach(button => {
        button.addEventListener('click', function () {
            const userId = this.getAttribute('data-userid');
            const username = this.getAttribute('data-username');
            const email = this.getAttribute('data-email');

            document.getElementById('detailContent').innerHTML = `
                <strong>ID:</strong> ${userId}<br>
                <strong>Username:</strong> ${username}<br>
                <strong>Email:</strong> ${email}
            `;
        });
    });


        // Xử lý sự kiện khi nhấn vào nút "Edit"
        document.querySelectorAll('.edit-user').forEach(button => {
            button.addEventListener('click', function () {
                currentUserId = this.getAttribute('data-userid');
                document.getElementById('editUsername').value = this.getAttribute('data-username');
                document.getElementById('editEmail').value = this.getAttribute('data-email');
                document.getElementById('editPassword').value = '';
            });
        });

        // Xử lý sự kiện khi nhấn vào nút "Delete"
        document.querySelectorAll('.delete-user').forEach(button => {
            button.addEventListener('click', function () {
                currentUserId = this.getAttribute('data-userid');
                document.getElementById('confirmDeleteButton').setAttribute('data-userid', currentUserId);
            });
        });

        // Delete handler
        document.getElementById('confirmDeleteButton').addEventListener('click', function () {
            const userId = this.getAttribute('data-userid');

            fetch(`/management/remove/${userId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                 
                },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            });
        });

            function viewDetail(userId, username, email) {
        console.log("View detail:", userId, username, email);
        document.getElementById('detailContent').innerHTML = `
            <strong>ID:</strong> ${userId}<br>
            <strong>Username:</strong> ${username}<br>
            <strong>Email:</strong> ${email}
        `;
    }

         // Update handler
        document.getElementById('editForm').addEventListener('submit', function (e) {
            e.preventDefault();
            const formData = {
                newUserName: document.getElementById('editUsername').value,
                newEmail: document.getElementById('editEmail').value,
                newPassword: document.getElementById('editPassword').value
            };

            fetch(`/management/update-user-account/${currentUserId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    
                },
                body: JSON.stringify(formData),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            });
        });
    });

        document.getElementById('searchInput').addEventListener('input', function () {
        let filter = this.value.toLowerCase();
        let rows = document.querySelectorAll('tbody tr');

        rows.forEach(row => {
            let username = row.cells[0].textContent.toLowerCase();
            let email = row.cells[1].textContent.toLowerCase();

            if (username.includes(filter) || email.includes(filter)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

</script>
